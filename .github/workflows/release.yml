name: Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v1.3.2, etc.

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    
    permissions:
      contents: write  # Required to create releases
    
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, 386, arm64]
        exclude:
          - goos: windows
            goarch: arm64
          - goos: darwin
            goarch: 386
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22.x'
    
    - name: Build binaries
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        mkdir -p dist
        EXT=""
        if [ "${{ matrix.goos }}" = "windows" ]; then
          EXT=".exe"
        fi
        
        # Build all three commands
        go build -v -ldflags="-s -w" -o "dist/pocsag-${{ matrix.goos }}-${{ matrix.goarch }}${EXT}" ./cmd/pocsag
        go build -v -ldflags="-s -w" -o "dist/pocsag-decode-${{ matrix.goos }}-${{ matrix.goarch }}${EXT}" ./cmd/pocsag-decode
        go build -v -ldflags="-s -w" -o "dist/pocsag-burst-${{ matrix.goos }}-${{ matrix.goarch }}${EXT}" ./cmd/pocsag-burst
        
        # Create compressed archives
        cd dist
        if [ "${{ matrix.goos }}" = "windows" ]; then
          zip "pocsag-golang-${{ matrix.goos }}-${{ matrix.goarch }}.zip" *
        else
          tar -czf "pocsag-golang-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz" *
        fi
    
    - name: Upload binaries to release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*.zip
          dist/*.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

